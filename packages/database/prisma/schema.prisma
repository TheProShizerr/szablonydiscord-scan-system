// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Template {
  id Int @id @default(autoincrement())
  templateId String
  title String
  usage Int
  dateCreate String
}

model User {
  id Int @id @default(autoincrement())
  userId String @unique
  username String
  avatar String? 
  dateCreateAccount DateTime?
  register Boolean @default(false)
  reports Int @default(0)
  warnings Int @default(0)
  limitApiKey Int @default(2)
  trustScore Int @default(100)
  emailVerified Boolean @default(false)
  template Templates[]
  api Api[]
}

model Api {
  id Int @id @default(autoincrement())
  name String
  dateCreate DateTime @default(now())
  status Boolean @default(true)
  secretKey String
  reqCount Int @default(0)
  successCount Int @default(0)
  errorCount Int @default(0)
  lastUsed DateTime
  montlyUsage Int @default(20000)
  userId String
  user User @relation(fields: [userId], references: [userId])
}

model Templates {
  in Int @id @default(autoincrement())
  templateId String @unique
  link String @unique
  categories String
  dateCreate String
  dateCreateSystem DateTime @default(now())
  title String
  description String?
  usageCount Int
  clickButtonUse Int?
  server String?
  serverLink String?
  authorId String?
  author User? @relation(fields: [authorId], references: [userId])

  @@index([usageCount])
  @@index([dateCreateSystem])
}